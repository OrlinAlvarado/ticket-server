{"version":3,"sources":["context/SocketContext.js","hooks/useSocket.js","context/UiContext.js","hooks/useHideMenu.js","helpers/getUsuarioStorage.js","pages/Ingresar.js","helpers/getUltimos.js","pages/Cola.js","pages/Escritorio.js","pages/CrearTicket.js","pages/RouterPage.js","TicketApp.js","index.js"],"names":["SocketContext","createContext","SocketProvider","children","serverPath","socket","useMemo","io","connect","transports","useState","online","setOnline","useEffect","connected","on","useSocket","process","Provider","value","UiContext","UiProvider","ocultarMenu","setOcultarMenu","showMenu","hideMenu","useHideMenu","ocultar","useContext","getUsuarioStorage","agente","localStorage","getItem","escritorio","Title","Typography","Text","layout","labelCol","span","wrapperCol","tailLayout","offset","Ingresar","history","useHistory","usuario","to","level","name","initialValues","remember","onFinish","setItem","push","onFinishFailed","errorInfo","console","log","Item","label","rules","required","message","min","max","type","htmlType","shape","SaveOutlined","getUltimos","a","fetch","resp","json","data","ultimos","Cola","tickets","setTickets","asignados","off","then","dataSource","slice","renderItem","item","style","width","marginTop","actions","color","numero","Meta","title","description","Escritorio","ticket","setTicket","align","onClick","clear","replace","CloseCircleOutlined","fontSize","emit","RightOutlined","CrearTicket","icon","DownloadOutlined","size","Sider","Layout","Header","Content","RouterPage","height","collapsedWidth","breakpoint","hidden","className","theme","mode","defaultSelectedKeys","UserOutlined","VideoCameraOutlined","UploadOutlined","margin","padding","minHeight","path","component","TicketApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b6ae607.chunk.js","sourcesContent":["import React from 'react';\nimport { createContext } from 'react';\nimport { useSocket } from '../hooks/useSocket'\n\nexport const SocketContext = createContext();\n\n\nexport const SocketProvider = ({ children }) => {\n\n    const { socket, online } = useSocket( process.env.REACT_APP_URL_SERVER );\n    \n    return (\n        <SocketContext.Provider value={{ socket, online }}>\n            { children }\n        </SocketContext.Provider>\n    )\n}","import { useEffect, useMemo, useState } from 'react';\nimport io from 'socket.io-client';\n\n\nexport const useSocket = ( serverPath ) => {\n    \n    const socket = useMemo(() => io.connect( serverPath, {\n        transports: ['websocket']\n    }), [ serverPath ] );\n    const [ online, setOnline ] = useState(false);\n\n    useEffect(() => {\n        setOnline( socket.connected );\n    }, [socket])\n\n    useEffect(() => {\n        socket.on('connect', () => setOnline( true ));\n    }, [ socket ])\n\n    useEffect(() => {\n        socket.on('disconnect', () => setOnline( false ));\n    }, [ socket ])\n\n    return {\n        socket,\n        online\n    }\n}\n","import React, { createContext, useState } from 'react'\r\n\r\nexport const UiContext = createContext();\r\n\r\n\r\nexport const UiProvider = ({ children }) => {\r\n    const [ocultarMenu, setOcultarMenu] = useState(false);\r\n    \r\n    const showMenu = () => {\r\n        setOcultarMenu( false );\r\n    }\r\n    \r\n    const hideMenu = () => {\r\n        setOcultarMenu( true );\r\n    }\r\n    \r\n    \r\n    \r\n    return (\r\n        <UiContext.Provider value={{\r\n            ocultarMenu,\r\n            showMenu,\r\n            hideMenu\r\n        }}>\r\n            { children }\r\n        </UiContext.Provider>\r\n    )\r\n}\r\n","import { useContext, useEffect } from 'react';\r\nimport { UiContext } from '../context/UiContext';\r\n\r\nexport const useHideMenu = ( ocultar ) => {\r\n    const { showMenu, hideMenu } = useContext(UiContext)\r\n    \r\n    useEffect(() => {\r\n        if( ocultar ){\r\n            hideMenu();\r\n        } else {\r\n            showMenu();\r\n        }\r\n        \r\n    }, [ ocultar, hideMenu, showMenu ])\r\n    \r\n}\r\n","export const getUsuarioStorage = () => {\r\n    return{\r\n        agente: localStorage.getItem('agente'),\r\n        escritorio: localStorage.getItem('escritorio'),\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Input, Button, InputNumber, Typography, Divider } from 'antd';\r\nimport { SaveOutlined } from '@ant-design/icons';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { useHideMenu } from '../hooks/useHideMenu';\r\nimport { getUsuarioStorage } from '../helpers/getUsuarioStorage';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 14 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 14 },\r\n  };\r\n  \r\nexport const Ingresar = () => {\r\n    const history = useHistory();\r\n    const [ usuario ] = useState( getUsuarioStorage() );\r\n    useHideMenu(false);\r\n    \r\n    const onFinish = ({ agente, escritorio }) => {\r\n        localStorage.setItem('agente', agente);\r\n        localStorage.setItem('escritorio', escritorio);\r\n        history.push('/escritorio');\r\n    };\r\n    \r\n    if( usuario.agente && usuario.escritorio ){\r\n        return <Redirect to=\"/escritorio\" />\r\n    }\r\n    \r\n    const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n    };\r\n      \r\n    return (\r\n        <>\r\n            <Title level={ 2 }>Ingresar</Title>\r\n            <Text>Ingrese su nombre y numero de escritorio</Text>\r\n            <Divider></Divider>\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                >\r\n                <Form.Item\r\n                    label=\"Nombre del agente\"\r\n                    name=\"agente\"\r\n                    rules={[{ required: true, message: 'Por favor ingrese su nombre' }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Escritorio\"\r\n                    name=\"escritorio\"\r\n                    rules={[{ required: true, message: 'Ingrese el número de escritorio' }]}\r\n                >\r\n                    <InputNumber min={ 1 } max={ 99 } />\r\n                </Form.Item>\r\n            \r\n                <Form.Item {...tailLayout}>\r\n                    <Button \r\n                        type=\"primary\" \r\n                        htmlType=\"submit\"\r\n                        shape=\"round\"\r\n                    >\r\n                        <SaveOutlined />\r\n                        Ingresar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>      \r\n        </>\r\n    )\r\n}\r\n","\r\nexport const getUltimos = async() => {\r\n    const resp = await fetch(`${ process.env.REACT_APP_URL_SERVER }/ultimos`);\r\n    \r\n    const data = await resp.json();\r\n    \r\n    return data.ultimos;\r\n} ","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Col, Row, Typography, List, Card, Tag, Divider } from 'antd';\r\nimport { useHideMenu } from '../hooks/useHideMenu';\r\nimport { SocketContext } from '../context/SocketContext';\r\nimport { getUltimos } from '../helpers/getUltimos';\r\n\r\nconst { Title, Text } = Typography;\r\n\r\n\r\n\r\nexport const Cola = () => {\r\n    \r\n    useHideMenu(true);\r\n    \r\n    const { socket } = useContext( SocketContext );\r\n    const [tickets, setTickets] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        socket.on('ticket-asignado', ( asignados ) => {\r\n            setTickets(asignados);\r\n        })\r\n        return () => {\r\n            socket.off('ticket-asignado');\r\n        }\r\n    }, [socket])\r\n    \r\n    useEffect(() => {\r\n        getUltimos().then( tickets => setTickets(tickets) );\r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            <Title level={1} >Atendiendo al cliente</Title>\r\n            <Row>\r\n                <Col span={ 12 }>\r\n                    <List \r\n                        dataSource={ tickets.slice(0,3) }\r\n                        renderItem={ item => (\r\n                            <List.Item>\r\n                                <Card\r\n                                    style={{ width: 300, marginTop: 16 }}\r\n                                    actions={[\r\n                                        <Tag color=\"volcano\"> { item.agente }</Tag>,\r\n                                        <Tag color=\"magenta\"> Escritorio: { item.escritorio }</Tag>,\r\n                                    ]}\r\n                                >\r\n                                    <Title>No. { item.numero }</Title>\r\n                                </Card>\r\n                            </List.Item>\r\n                        )}\r\n                    \r\n                    />    \r\n                </Col>\r\n                <Col span={ 12 }>\r\n                    <Divider> Historial </Divider>\r\n                    <List\r\n                        dataSource={ tickets.slice(3) }\r\n                        renderItem={ item => (\r\n                            <List.Item>\r\n                                <List.Item.Meta \r\n                                    title={ `Ticket No. ${ item.numero }`}\r\n                                    description={\r\n                                        <>\r\n                                            <Text type=\"secondary\">En el escritorio: </Text>\r\n                                            <Tag color=\"magenta\">{ item.numero }</Tag>\r\n                                            <Text type=\"secondary\">Agente: </Text>\r\n                                            <Tag color=\"volcano\">{ item.agente }</Tag>\r\n                                        </>\r\n                                    }\r\n                                />\r\n                            </List.Item>   \r\n                        )}\r\n                    >\r\n                        \r\n                    </List>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useState } from 'react'\r\nimport { Button, Col, Divider, Row, Typography } from 'antd'\r\nimport { CloseCircleOutlined, RightOutlined } from '@ant-design/icons';\r\nimport { useHideMenu } from '../hooks/useHideMenu';\r\nimport { getUsuarioStorage } from '../helpers/getUsuarioStorage';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { SocketContext } from '../context/SocketContext';\r\n\r\nconst { Title, Text } =  Typography;\r\nexport const Escritorio = () => {\r\n    const history = useHistory();\r\n    useHideMenu(false);\r\n    \r\n    const [ usuario ] = useState( getUsuarioStorage() );\r\n    const { socket } = useContext( SocketContext );\r\n    const [ ticket, setTicket ] = useState(null);\r\n    \r\n    const salir = () => {\r\n        localStorage.clear();\r\n        history.replace('/ingresar');\r\n    }\r\n    \r\n    const siguienteTicket = () => {\r\n        socket.emit('siguiente-ticket-trabajar', usuario, ( ticket ) => {\r\n            setTicket( ticket );\r\n        });\r\n    }\r\n    \r\n    if( !usuario.agente || !usuario.escritorio ){\r\n        return <Redirect to=\"/ingresar\" />\r\n    }\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={ 20 }>\r\n                    <Title level={ 2 }>{ usuario.agente }</Title>\r\n                    <Text>Usted está trabajando en el escritorio: </Text>\r\n                    <Text type=\"success\">{ usuario.escritorio }</Text>\r\n                </Col>\r\n                <Col span={ 4 } align=\"right\">\r\n                    <Button\r\n                        shape=\"round\"\r\n                        type=\"danger\"\r\n                        onClick={ salir }\r\n                    >\r\n                        <CloseCircleOutlined />\r\n                        Salir\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider>\r\n            \r\n            {\r\n                ticket && (\r\n                <Row>\r\n                    <Col>\r\n                        <Text>Está atendiendo el ticket número: </Text>\r\n                        <Text \r\n                            style={{ fontSize: 30 }} \r\n                            type=\"danger\"\r\n                        >\r\n                            { ticket.numero }\r\n                        </Text>\r\n                    </Col>\r\n                </Row>)\r\n            }\r\n            \r\n            <Row>\r\n                <Col offset={ 18 } span={ 6 } align=\"right\">\r\n                    <Button\r\n                        onClick={ siguienteTicket }\r\n                        type=\"primary\"\r\n                    >\r\n                        <RightOutlined />\r\n                        Siguiente                        \r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","import { Button, Col, Row, Typography } from 'antd'\r\nimport React, { useContext, useState } from 'react'\r\nimport { DownloadOutlined } from '@ant-design/icons'\r\nimport { useHideMenu } from '../hooks/useHideMenu';\r\nimport { SocketContext } from '../context/SocketContext';\r\n\r\nconst { Title, Text } = Typography;\r\nexport const CrearTicket = () => {\r\n    \r\n    useHideMenu(true);\r\n    const { socket } = useContext( SocketContext );\r\n    const [ticket, setTicket] = useState(null);\r\n    \r\n    const nuevoTicket = () => {\r\n        socket.emit('solicitar-ticket', null, ( ticket ) => {\r\n            setTicket( ticket );\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n           <Row>\r\n               <Col span={ 14 } offset={ 6 } align=\"center\">\r\n                   <Title level={ 3 }>\r\n                       Presione el botón para un nuevo ticket\r\n                   </Title>\r\n                   \r\n                   <Button\r\n                        type=\"primary\"\r\n                        shape=\"round\"\r\n                        icon={ <DownloadOutlined /> }\r\n                        size=\"large\"\r\n                        onClick={ nuevoTicket }\r\n                   >\r\n                       Nuevo ticket\r\n                   </Button>\r\n               </Col>\r\n           </Row>\r\n           {\r\n               ticket && (\r\n                <Row style={{ marginTop: 100 }}>\r\n                    <Col span={ 14 } offset={ 6 } align=\"center\">\r\n                        <Text level={ 2 }>\r\n                            Su número\r\n                        </Text>\r\n                        <br />\r\n                        <Text type=\"success\" style={{ fontSize: 55 }}>\r\n                            { ticket.numero }\r\n                        </Text>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n               )\r\n           }\r\n           \r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Layout, Menu } from 'antd';\r\nimport {\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { Ingresar } from './Ingresar';\r\nimport { Cola } from './Cola';\r\nimport { Escritorio } from './Escritorio';\r\nimport { CrearTicket } from './CrearTicket';\r\nimport { UiContext } from '../context/UiContext';\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nexport const RouterPage = () => {\r\n  const { ocultarMenu } = useContext( UiContext )\r\n    return (\r\n      <Router>\r\n        <Layout style={{ height: '100vh'}}>\r\n            <Sider collapsedWidth=\"0\"\r\n                   breakpoint=\"md\"\r\n                   hidden={ ocultarMenu }>\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n                  <Link to=\"/ingresar\">\r\n                    Ingresar\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n                  <Link to=\"/cola\">\r\n                      Cola de tickets\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n                  <Link to=\"/crear\">\r\n                    Crear ticket\r\n                  </Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n            </Sider>\r\n          <Layout className=\"site-layout\">\r\n            <Content\r\n              className=\"site-layout-background\"\r\n              style={{\r\n                margin: '24px 16px',\r\n                padding: 24,\r\n                minHeight: 280,\r\n              }}\r\n            >\r\n              <Switch>\r\n                <Route path=\"/ingresar\" component={ Ingresar } />\r\n                <Route path=\"/cola\" component={ Cola } />\r\n                <Route path=\"/crear\" component={ CrearTicket } />\r\n                <Route path=\"/escritorio\" component={ Escritorio } />\r\n                <Redirect to=\"ingresar\" />\r\n              </Switch>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { SocketProvider } from './context/SocketContext'\r\nimport { UiProvider } from './context/UiContext'\r\nimport { RouterPage } from './pages/RouterPage'\r\n\r\nexport const TicketApp = () => {\r\n    return (\r\n        <SocketProvider>\r\n            <UiProvider>\r\n                <RouterPage />\r\n            </UiProvider>\r\n        </SocketProvider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { TicketApp } from './TicketApp';\n\nReactDOM.render(\n    <TicketApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}